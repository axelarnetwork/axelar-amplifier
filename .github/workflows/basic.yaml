# Based on https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml
name: Basic

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: blacksmith-32vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-key: "cache-tests"

      - name: Install protoc
        uses: arduino/setup-protoc@a8b67ba40b37d35169e222f3bb352603327985b6 # v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: cargo test --locked --no-fail-fast
        env:
          RUST_BACKTRACE: 1

  cosmwasm-compilation:
    name: Cosmwasm Compilation
    runs-on: blacksmith-32vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-key: "cache-cosmwasm-compilation"

      - name: Build wasm release
        run: |
          for C in ./contracts/*/
          do
            echo "Compiling `basename $C`..."
            (cd $C && cargo build --release --lib --target wasm32-unknown-unknown --locked)
          done

      - name: Install cosmwasm-check
        run: cargo install --version 3.0.1 --locked cosmwasm-check

      - name: Check wasm contracts
        run: cosmwasm-check ./target/wasm32-unknown-unknown/release/*.wasm

  ampd-compilation:
    name: Ampd Release Compilation
    runs-on: blacksmith-16vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-key: "cache-ampd-compilation"

      - name: Install protoc
        uses: arduino/setup-protoc@a8b67ba40b37d35169e222f3bb352603327985b6 # v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ampd
        working-directory: ./ampd
        run: cargo build --release --locked

  lints:
    name: Lints
    runs-on: blacksmith-16vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive

      # Setup Rust once - components are already in rust-toolchain.toml
      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-key: "cache-lints"

      # Currently a workaround for running custom lints.
      # For some reason, the custom lints seem to use cargo version 1.80.0, causing that step to fail.
      - name: Uninstall stable & nightly rust versions
        run: rustup uninstall stable

      - name: show installed toolchains
        run: |
          rustup show
          rustup toolchain list


      # Install nightly toolchain for formatting (as per justfile)
      - name: Install nightly for rustfmt
        run: rustup toolchain install nightly --component rustfmt --profile minimal

      - name: Install protoc
        uses: arduino/setup-protoc@a8b67ba40b37d35169e222f3bb352603327985b6 # v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cargo-sort
        uses: baptiste0928/cargo-install@e38323ef017552d7f7af73a3f4db467f278310ed # v3
        with:
          crate: cargo-sort

      - name: show installed toolchains
        run: |
          rustup show
          rustup toolchain list


      - name: Install cargo-dylint
        uses: baptiste0928/cargo-install@e38323ef017552d7f7af73a3f4db467f278310ed # v3
        with:
          crate: cargo-dylint

      - name: Install dylint-link
        uses: baptiste0928/cargo-install@e38323ef017552d7f7af73a3f4db467f278310ed # v3
        with:
          crate: dylint-link

#      - name: Run cargo fmt
#        run: cargo +nightly fmt-check # alias
#
#      - name: Run cargo sort
#        run: cargo sort-check # alias
#
#      - name: Run cargo clippy
#        run: cargo clippy-check # alias

      - name: Run custom lints
        run: cargo dylint --all
        env:
          DYLINT_RUSTFLAGS: -D warnings -A deprecated

      - name: Check Diff
        # fails if any changes not committed
        run: git diff --exit-code
