syntax = "proto3";
package axelar.evm.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/evm/types";

import "gogoproto/gogo.proto";
import "axelar/tss/exported/v1beta1/types.proto";
import "axelar/evm/v1beta1/types.proto";
import "axelar/permission/exported/v1beta1/types.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

option (gogoproto.goproto_getters_all) = false;

message SetGatewayRequest {
  option (amino.name) = "evm/SetGatewayRequest";
  option (permission.exported.v1beta1.permission_role) = ROLE_ACCESS_CONTROL;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes address = 3
      [ (gogoproto.nullable) = false, (gogoproto.customtype) = "Address" ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message SetGatewayResponse {}

message ConfirmGatewayTxRequest {
  option (amino.name) = "evm/ConfirmGatewayTxRequest";
  option deprecated = true;

  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxID"
  ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ConfirmGatewayTxResponse { option deprecated = true; }

message ConfirmGatewayTxsRequest {
  option (amino.name) = "evm/ConfirmGatewayTxsRequest";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  repeated bytes tx_ids = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxIDs"
  ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ConfirmGatewayTxsResponse {}

// MsgConfirmDeposit represents an erc20 deposit confirmation message
message ConfirmDepositRequest {
  option (amino.name) = "evm/ConfirmDeposit";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxID"
  ];
  bytes amount = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Uint",
    (gogoproto.nullable) = false,
    deprecated = true
  ];
  bytes burner_address = 5
      [ (gogoproto.nullable) = false, (gogoproto.customtype) = "Address" ];
  string sender = 6 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ConfirmDepositResponse {}

// MsgConfirmToken represents a token deploy confirmation message
message ConfirmTokenRequest {
  option (amino.name) = "evm/ConfirmToken";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxID"
  ];
  Asset asset = 4 [ (gogoproto.nullable) = false ];
  string sender = 5 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ConfirmTokenResponse {}

message ConfirmTransferKeyRequest {
  option (amino.name) = "evm/ConfirmTransferKey";
  reserved 4, 5; // transfer_type and key_id were deleted in v0.20

  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxID"
  ];
  string sender = 6 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ConfirmTransferKeyResponse {}

// MsgLink represents the message that links a cross chain address to a burner
// address
message LinkRequest {
  option (amino.name) = "evm/Link";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string recipient_addr = 3;
  string asset = 4;
  string recipient_chain = 5
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string sender = 6 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message LinkResponse { string deposit_addr = 1; }

// CreateBurnTokensRequest represents the message to create commands to burn
// tokens with AxelarGateway
message CreateBurnTokensRequest {
  option (amino.name) = "evm/CreateBurnTokens";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string sender = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message CreateBurnTokensResponse {}

// CreateDeployTokenRequest represents the message to create a deploy token
// command for AxelarGateway
message CreateDeployTokenRequest {
  option (amino.name) = "evm/CreateDeployToken";
  option (permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  Asset asset = 3 [ (gogoproto.nullable) = false ];
  TokenDetails token_details = 4 [ (gogoproto.nullable) = false ];
  reserved 5; // min_amount was removed in v0.15
  bytes address = 6
      [ (gogoproto.nullable) = false, (gogoproto.customtype) = "Address" ];
  string daily_mint_limit = 7;
  string sender = 8 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message CreateDeployTokenResponse {}

// CreatePendingTransfersRequest represents a message to trigger the creation of
// commands handling all pending transfers
message CreatePendingTransfersRequest {
  option (amino.name) = "evm/CreatePendingTransfers";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string sender = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message CreatePendingTransfersResponse {}

message CreateTransferOwnershipRequest {
  option deprecated = true;

  option (permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string key_id = 3 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID"
  ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message CreateTransferOwnershipResponse { option deprecated = true; }

message CreateTransferOperatorshipRequest {
  option (amino.name) = "evm/CreateTransferOperatorship";
  option (permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string key_id = 3 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID"
  ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message CreateTransferOperatorshipResponse {}

message SignCommandsRequest {
  option (amino.name) = "evm/SignCommands";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string sender = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message SignCommandsResponse {
  bytes batched_commands_id = 1
      [ (gogoproto.customname) = "BatchedCommandsID" ];
  uint32 command_count = 2;
}

message AddChainRequest {
  option (amino.name) = "evm/AddChainRequest";
  option (permission.exported.v1beta1.permission_role) = ROLE_ACCESS_CONTROL;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 3; // native_asset was removed in v0.14

  reserved 1; // used to be sender bytes with AccAddress cast
  string name = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  tss.exported.v1beta1.KeyType key_type = 4 [ deprecated = true ];
  bytes params = 5
      [ (gogoproto.nullable) = false, (gogoproto.customtype) = "Params" ];
  string sender = 6 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message AddChainResponse {}

message RetryFailedEventRequest {
  option (amino.name) = "evm/RetryFailedEvent";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string event_id = 3
      [ (gogoproto.customname) = "EventID", (gogoproto.casttype) = "EventID" ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message RetryFailedEventResponse {}
