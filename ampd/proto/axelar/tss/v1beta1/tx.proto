syntax = "proto3";
package axelar.tss.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/tss/types";

import "gogoproto/gogo.proto";
import "axelar/tss/exported/v1beta1/types.proto";
import "axelar/tss/v1beta1/types.proto";
import "axelar/tss/tofnd/v1beta1/tofnd.proto";
import "axelar/vote/exported/v1beta1/types.proto";
import "axelar/permission/exported/v1beta1/types.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

option (gogoproto.goproto_getters_all) = false;

// StartKeygenRequest indicate the start of keygen
message StartKeygenRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  tss.v1beta1.KeyInfo key_info = 2 [ (gogoproto.nullable) = false ];
}

message StartKeygenResponse {}

message RotateKeyRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  tss.exported.v1beta1.KeyRole key_role = 3;
  string key_id = 4 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"
  ];
  string sender = 5 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message RotateKeyResponse {}

// ProcessKeygenTrafficRequest protocol message
message ProcessKeygenTrafficRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string session_id = 2 [ (gogoproto.customname) = "SessionID" ];
  tss.tofnd.v1beta1.TrafficOut payload = 3 [ (gogoproto.nullable) = false ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ProcessKeygenTrafficResponse {}

// ProcessSignTrafficRequest protocol message
message ProcessSignTrafficRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string session_id = 2 [ (gogoproto.customname) = "SessionID" ];
  tss.tofnd.v1beta1.TrafficOut payload = 3 [ (gogoproto.nullable) = false ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message ProcessSignTrafficResponse {}

// VotePubKeyRequest represents the message to vote on a public key
message VotePubKeyRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  vote.exported.v1beta1.PollKey poll_key = 2 [ (gogoproto.nullable) = false ];
  tss.tofnd.v1beta1.MessageOut.KeygenResult result = 3
      [ (gogoproto.nullable) = false ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}
message VotePubKeyResponse { string log = 1; }

// VoteSigRequest represents a message to vote for a signature
message VoteSigRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender_bz
  vote.exported.v1beta1.PollKey poll_key = 2 [ (gogoproto.nullable) = false ];
  tss.tofnd.v1beta1.MessageOut.SignResult result = 3
      [ (gogoproto.nullable) = false ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message VoteSigResponse { string log = 1; }

message HeartBeatRequest {
  option (amino.name) = "tss/HeartBeatRequest";
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender_bz

  // Deprecated: this field will be removed in the next release
  repeated string key_ids = 2 [
    (gogoproto.customname) = "KeyIDs",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID",
    deprecated = true
  ]; // key_ids was deprecated in v1.0
  string sender = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message HeartBeatResponse {}

message RegisterExternalKeysRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  option (cosmos.msg.v1.signer) = "sender";

  message ExternalKey {
    string id = 1 [
      (gogoproto.customname) = "ID",
      (gogoproto.casttype) =
          "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"
    ];
    bytes pub_key = 2;
  }

  reserved 1; // used to be sender bytes with AccAddress cast
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  repeated ExternalKey external_keys = 3 [ (gogoproto.nullable) = false ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message RegisterExternalKeysResponse {};

message SubmitMultisigPubKeysRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string key_id = 2 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"
  ];
  repeated exported.v1beta1.SigKeyPair sig_key_pairs = 3
      [ (gogoproto.nullable) = false ];
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message SubmitMultisigPubKeysResponse {}

message SubmitMultisigSignaturesRequest {
  option (permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  option (cosmos.msg.v1.signer) = "sender";

  reserved 1; // used to be sender bytes with AccAddress cast
  string sig_id = 2 [ (gogoproto.customname) = "SigID" ];

  repeated bytes signatures = 3;
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message SubmitMultisigSignaturesResponse {}
