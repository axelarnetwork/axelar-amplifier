[package]
name = "chain-codec"
version = "0.1.0"
rust-version = { workspace = true }
license = "MIT OR Apache-2.0"
edition = { workspace = true }
description = "Chain codec contract for EVM / Sui / Stellar chains, using their respective encodings and address formats"

[package.metadata.optimizer]
standard-build = false
builds = [
    { name = "sui", features = [
        "sui",
    ], default-features = false },
    { name = "evm", features = [
        "evm",
    ], default-features = false },
    { name = "stellar", features = [
        "stellar",
    ], default-features = false },
]

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "chain-codec-schema"
path = "src/bin/schema.rs"

[features]
# use library feature to disable all instantiate/execute/query exports
library = []

default = ["evm"]

# one of the following needs to be enabled:
# enable this to build the Sui contract with BCS encoding and Sui addresses
sui = []
# enable this to build the EVM contract with ABI encoding and EIP55 addresses
evm = []
# enable this to build the Stellar contract with XDR encoding and Stellar addresses
stellar = []

[dependencies]
axelar-wasm-std = { workspace = true, features = ["derive"] }
bcs = { version = "0.1.5" }
chain-codec-api = { workspace = true }
cosmwasm-schema = { workspace = true }
cosmwasm-std = { workspace = true }
cw-storage-plus = { workspace = true }
cw2 = { workspace = true }
error-stack = { workspace = true }
ethers-contract = { workspace = true }
ethers-core = { workspace = true }
evm-gateway = { workspace = true }
itertools = { workspace = true }
k256 = { workspace = true }
msgs-derive = { workspace = true }
multisig = { workspace = true, features = ["library"] }
sha3 = { workspace = true }
stellar = { workspace = true }
stellar-xdr = { workspace = true }
sui-gateway = { workspace = true }
thiserror = { workspace = true }

[dev-dependencies]
anyhow = "1.0"
assert_ok = { workspace = true }
cw-multi-test = { workspace = true }
elliptic-curve = "0.13.5"
generic-array = "0.14.7"
goldie = { workspace = true }
hex = { workspace = true }
prost = "0.12.4"
router-api = { workspace = true }
service-registry-api = { workspace = true }

[lints]
workspace = true
