[package]
name = "xrpl-multisig-prover"
version = "0.1.1"
rust-version = { workspace = true }
edition = { workspace = true }
description = "XRPL multisig prover contract"

exclude = [
    "contract.wasm",
    "hash.txt"
]
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "xrpl-multisig-prover-schema"
path = "src/bin/schema.rs"

[features]
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
# use library feature to disable all instantiate/execute/query exports
library = []

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/optimizer:0.16.0
"""

[dependencies]
ascii = { version = "1.1.0", features = ["serde"] }
axelar-wasm-std = { workspace = true, features = ["derive"] }
coordinator = { workspace = true }
cosmwasm-schema = { workspace = true }
cosmwasm-std = { workspace = true }
cw-storage-plus = { workspace = true }
cw-utils = "1.0.1"
cw2 = { workspace = true }
error-stack = { workspace = true }
itertools = "0.11.0"
interchain-token-service = { workspace = true, features = ["library"] }
k256 = { workspace = true, features = ["ecdsa"] }
msgs-derive = { workspace = true }
multisig = { workspace = true, features = ["library"] }
report = { workspace = true }
ripemd = "0.1.3"
router-api = { workspace = true }
serde_json = "1.0.89"
service-registry = { workspace = true }
sha3 = { workspace = true }
thiserror = { workspace = true }
xrpl-gateway = { workspace = true }
xrpl-types = { workspace = true }
xrpl-voting-verifier = { workspace = true, features = ["library"] }

[dev-dependencies]
anyhow = "1.0"
cw-multi-test = "0.15.1"
elliptic-curve = "0.13.5"
generic-array = "0.14.7"

[lints]
workspace = true
