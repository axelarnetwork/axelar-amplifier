[package]
name = "xrpl-gateway"
version = "1.2.0"
rust-version = { workspace = true }
edition = { workspace = true }
description = "XRPL gateway contract"

exclude = ["contract.wasm", "hash.txt"]
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "xrpl-gateway-schema"
path = "src/bin/schema.rs"

[features]
# use library feature to disable all instantiate/execute/query exports
library = []
# generate golden files for the tests
generate_golden_files = []

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/optimizer:0.16.0
"""

[dependencies]
axelar-core-std = { workspace = true }
axelar-wasm-std = { workspace = true, features = ["derive"] }
client = { workspace = true }
cosmwasm-schema = { workspace = true }
cosmwasm-std = { workspace = true }
cw-storage-plus = { workspace = true }
cw2 = { workspace = true }
error-stack = { workspace = true }
gateway-api = { workspace = true }
interchain-token-service = { workspace = true, features = ["library"] }
itertools = { workspace = true }
msgs-derive = { workspace = true }
report = { workspace = true }
router-api = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sha3 = { workspace = true }
thiserror = { workspace = true }
xrpl-types = { workspace = true }
xrpl-voting-verifier = { workspace = true, features = ["library"] }

[dev-dependencies]
assert_ok = { workspace = true }
cw-multi-test = "0.15.1"
goldie = { workspace = true }
rand = { workspace = true }

[lints]
workspace = true
