[workspace]
members = [
  "ampd", 
  "ampd-handlers",
  "contracts/*",
  "external-gateways/*",
  "integration-tests",
  "packages/*",
  "tools/*",
]
resolver = "2"

[workspace.package]
rust-version = "1.81.0" # be sure there is an optimizer release supporting this version before updating. See https://github.com/CosmWasm/optimizer
edition = "2021"
license = "MIT OR Apache-2.0"

[workspace.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/optimizer:0.16.1
"""

[workspace.dependencies]
alloy-primitives = { version = "0.7.6", default-features = false, features = [
  "std",
] }
alloy-sol-types = { version = "0.7.6", default-features = false, features = [
  "std",
] }
anyhow = "1.0.89"
ampd-proto = { version = "^0.1.0", path = "packages/ampd-proto" }
ampd-sdk = { version = "^0.1.0", path = "packages/ampd-sdk" }
assert_ok = "1.0"
async-trait = "0.1.59"
axelar-wasm-std = { version = "^1.0.0", path = "packages/axelar-wasm-std" }
axelar-wasm-std-derive = { version = "^1.0.0", path = "packages/axelar-wasm-std-derive" }
axelarnet-gateway = { version = "^1.0.0", path = "contracts/axelarnet-gateway" }
bcs = "0.1.5"
bech32 = "0.11.0"
bs58 = "0.5.1"
client = { version = "^1.0.0", path = "packages/client" }
coordinator = { version = "^1.1.0", path = "contracts/coordinator" }
cosmwasm-crypto = "2.1.4"
cosmwasm-schema = "2.1.4"
cosmwasm-std = "2.1.4"
cosmrs = "0.22.0"
cw-multi-test = "2.2.0"
cw-storage-plus = { version = "2.0.0", features = ["iterator", "macro"] }
cw-utils = "2.0.0"
cw2 = "2.0.0"
ed25519-dalek = { version = "2.1.1", default-features = false }
error-stack = { version = "0.4.0", features = ["eyre"] }
ethers-contract = { version = "2.0.14", default-features = false, features = [
  "abigen",
] }
ethers-core = "2.0.14"
events = { version = "^1.0.0", path = "packages/events" }
events-derive = { version = "^1.0.0", path = "packages/events-derive" }
evm-gateway = { version = "^1.0.0", path = "packages/evm-gateway" }
futures = "0.3.25"
xrpl-types = { version = "^1.0.0", path = "packages/xrpl-types" }
gateway = { version = "^1.1.1", path = "contracts/gateway" }
gateway-api = { version = "^1.0.0", path = "packages/gateway-api" }
goldie = { version = "0.5" }
heck = "0.5.0"
hex = "0.4.3"
integration-tests = { version = "^1.0.0", path = "integration-tests" }
interchain-token-service = { version = "^1.2.1", path = "contracts/interchain-token-service" }
into-inner-derive = { version = "^1.0.0", path = "packages/into-inner-derive" }
itertools = "0.14.0"
k256 = { version = "0.13.1", features = ["ecdsa"] }
mockall = "0.12.1"
msgs-derive = { version = "^1.0.0", path = "packages/msgs-derive" }
multisig = { version = "^1.1.1", path = "contracts/multisig" }
multisig-prover = { version = "^1.1.1", path = "contracts/multisig-prover" }
num-traits = { version = "0.2.14", default-features = false }
quote = "1.0.38"
rand = "0.8.5"
report = { version = "^1.0.0", path = "packages/report" }
rewards = { version = "^1.2.0", path = "contracts/rewards" }
router = { version = "^1.2.0", path = "contracts/router" }
router-api = { version = "^1.0.0", path = "packages/router-api" }
schemars = "0.8.10"
semver = "1.0"
serde = { version = "1.0.145", default-features = false, features = ["derive"] }
serde_json = "1.0.134"
service-registry = { version = "^1.1.0", path = "contracts/service-registry" }
service-registry-api = { version = "^1.0.0", path = "packages/service-registry-api" }
sha3 = { version = "0.10.8", default-features = false, features = [] }
signature-verifier-api = { version = "^1.0.0", path = "packages/signature-verifier-api" }
stellar = { version = "^1.0.0", path = "external-gateways/stellar" }
stellar-xdr = { version = "21.2.0" }
strum = { version = "0.25", default-features = false, features = ["derive"] }
sui-gateway = { version = "^1.0.0", path = "packages/sui-gateway" }
sui-types = { version = "^1.0.0", path = "packages/sui-types" }
starknet-checked-felt = { version = "^1.0.0", path = "packages/starknet-checked-felt" }
starknet-types-core = { version = "0.1.7" }
starknet-core = "0.12.0"
starknet-providers = "0.12.0"
axelar-solana-encoding = { git = "https://github.com/eigerco/solana-axelar.git", rev = "e6ab452" }
gateway-event-stack = { git = "https://github.com/eigerco/solana-axelar.git", rev = "e6ab452" }
axelar-solana-gateway = { git = "https://github.com/eigerco/solana-axelar.git", rev = "e6ab452" }
syn = "2.0.92"
tendermint = "0.35.0"
thiserror = "1.0.61"
humantime-serde = "1.1.1"
tracing = { version = "0.1.37", features = ["valuable", "log"] }
tofn = { version = "1.1" }
tokio = "1.44.2"
tokio-stream = "0.1.11"
tokio-util = "0.7.11"
typed-builder = "0.18.2"
voting-verifier = { version = "^1.1.0", path = "contracts/voting-verifier" }
axelar-core-std = { version = "^1.0.0", path = "packages/axelar-core-std" }
proc-macro2 = "1.0.92"
valuable = "0.1.1"

[workspace.lints.clippy]
arithmetic_side_effects = "deny"
cast_possible_truncation = "deny"

[profile.release]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
incremental = false
overflow-checks = true

[patch.crates-io]
# aes-gcm-siv 0.10.3 and curve25519-dalek 3.x pin zeroize to <1.4
# which conflicts with other dependencies requiring zeroize ^1.5.
# We’re patching both crates to unpin zeroize.
#
# For curve25519-dalek we’re using commit from a PR, see
# https://github.com/dalek-cryptography/curve25519-dalek/pull/606
curve25519-dalek = { git = "https://github.com/dalek-cryptography/curve25519-dalek", rev = "8274d5cbb6fc3f38cdc742b4798173895cd2a290" }
